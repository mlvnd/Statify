{"ast":null,"code":"import _classCallCheck from \"/Users/nojan/Desktop/spotify-api-intro/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nojan/Desktop/spotify-api-intro/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nojan/Desktop/spotify-api-intro/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nojan/Desktop/spotify-api-intro/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nojan/Desktop/spotify-api-intro/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nojan/Desktop/spotify-api-intro/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport axios from 'axios';\nvar spotifyApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      details: {\n        data: ''\n      },\n      auth: token\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      });\n    }\n  }, {\n    key: \"getShortTerm\",\n    value: function getShortTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token); // true for asynchronous \n\n      xmlHttp.send(null);\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        details: {\n          data: data\n        }\n      });\n      console.log(this.state.details.data.items[0].name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" Login to Spotify \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.albumArt,\n        style: {\n          height: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), this.state.loggedIn && React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Check Now Playing\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Check Now Playing\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nojan/Desktop/spotify-api-intro/client/src/App.js"],"names":["React","Component","SpotifyWebApi","axios","spotifyApi","App","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","details","data","auth","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","JSON","parse","responseText","console","log","items","height","getNowPlaying"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport axios from 'axios';\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      details: {data: ''},\n      auth: token\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n        });\n        \n      })\n  }\n\n  getShortTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token); // true for asynchronous \n    xmlHttp.send(null);\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      details: {data: data}\n    })\n    console.log(this.state.details.data.items[0].name)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n        <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}