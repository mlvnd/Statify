{"ast":null,"code":"import _classCallCheck from \"/Users/nojan/Desktop/Statify/Client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nojan/Desktop/Statify/Client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nojan/Desktop/Statify/Client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nojan/Desktop/Statify/Client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nojan/Desktop/Statify/Client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nojan/Desktop/Statify/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport login from \"./login.svg\";\nimport spotify from './spotify.png';\nimport user from './user.png';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Icon from '@material-ui/core/Icon';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      artistDetails: {\n        artists: {\n          items: []\n        }\n      },\n      trackDetails: {\n        tracks: {\n          items: []\n        }\n      },\n      auth: token\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      });\n    }\n  }, {\n    key: \"getShortTerm\",\n    value: function getShortTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      var data = JSON.parse(xmlHttp.responseText);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      console.log(this.state.artists);\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n    }\n  }, {\n    key: \"getMediumTerm\",\n    value: function getMediumTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      var data = JSON.parse(xmlHttp.responseText);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n    }\n  }, {\n    key: \"getLongTerm\",\n    value: function getLongTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n      console.log(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          \"background-color\": \"#1db954\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        justify: \"space-between\" // Add it here :)\n        ,\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Statify\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        src: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: login,\n        style: {\n          height: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.albumArt,\n        style: {\n          height: 150,\n          width: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), this.state.loggedIn && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Check Now Playing\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.loggedIn && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getShortTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Show Short Term\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.state.loggedIn && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getMediumTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Show Medium Term\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.loggedIn && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getLongTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Show Long Term\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cellHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.artistDetails.artists.items.map(function (artist, index) {\n        return React.createElement(GridListTile, {\n          key: artist.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, artist.images[0] && React.createElement(\"img\", {\n          src: artist.images[0].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: artist.name,\n          subtitle: index + 1 //actionIcon={\n          //<IconButton>\n          // </IconButton>\n          //<Icon src={spotify}/>\n          //}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }));\n      }))), React.createElement(\"div\", {\n        className: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.trackDetails.tracks.items.map(function (track) {\n        return React.createElement(GridListTile, {\n          key: track.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, track.album.images[0] && React.createElement(\"img\", {\n          src: track.album.images[0].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: track.name,\n          subtitle: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, track.artists[0].name) //actionIcon={\n          //<IconButton>\n          // </IconButton>\n          //<Icon src={spotify}/>\n          //}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nojan/Desktop/Statify/Client/src/App.js"],"names":["React","Component","spotify","user","Button","AppBar","Toolbar","Typography","Grid","Avatar","GridList","GridListTile","GridListTileBar","Icon","SpotifyWebApi","spotifyApi","App","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","artistDetails","artists","items","trackDetails","tracks","auth","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","data","JSON","parse","responseText","alert","console","log","login","height","width","getNowPlaying","getShortTerm","getMediumTerm","getLongTerm","map","artist","index","track"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport login from './login.svg';\nimport spotify from './spotify.png';\nimport user from './user.png'\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport Icon from '@material-ui/core/Icon'\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      artistDetails: {artists: {items: []}},\n      trackDetails: {tracks: {items: []}},\n      auth: token\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n        });\n        \n      })\n  }\n\n  getShortTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    var data = JSON.parse(xmlHttp.responseText);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    console.log(this.state.artists);\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n  }\n  getMediumTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    var data = JSON.parse(xmlHttp.responseText);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n  }\n  getLongTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n    console.log(data)\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" style={{\"background-color\": \"#1db954\"}}>\n          <Toolbar>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container \n              spacing={24}\n            >\n              <Grid item>\n                <Typography variant=\"h5\" color=\"inherit\">\n                  Statify\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Avatar src={user} />\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <br />\n        <a href='http://localhost:8888'> <img src={login} style={{ height: 35 }}  /> </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150, width: 150 }}/>\n        </div>\n        \n        { this.state.loggedIn &&\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </Button>\n        }\n        <br />\n        <br />\n        <Grid               \n          container \n          spacing={24}\n          justify=\"center\"\n        >\n          <Grid item>\n            { this.state.loggedIn &&\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getShortTerm()}>\n                Show Short Term\n            </Button>\n            }\n          </Grid>\n          <Grid item>\n            { this.state.loggedIn &&\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getMediumTerm()}>\n                Show Medium Term\n            </Button>\n            }\n          </Grid>\n          <Grid item>\n            { this.state.loggedIn &&\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getLongTerm()}>\n                Show Long Term\n            </Button>\n            }\n          </Grid>\n        </Grid>\n        <br />\n        <div className=\"root\">\n          <GridList cellHeight={200}>\n            {this.state.artistDetails.artists.items.map((artist, index) => (\n              <GridListTile key={artist.name}>\n                { artist.images[0] && \n                <img src={artist.images[0].url}/>}\n                <GridListTileBar\n                  title={artist.name}\n                  subtitle={index + 1}\n                  //actionIcon={\n                    //<IconButton>\n                   // </IconButton>\n                   //<Icon src={spotify}/>\n                  //}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n        <div className=\"root\">\n          <GridList className=\"gridList\">\n            {this.state.trackDetails.tracks.items.map(track => (\n              <GridListTile key={track.name}>\n                { track.album.images[0] && \n                <img src={track.album.images[0].url}/>}\n                <GridListTileBar\n                  title={track.name}\n                  subtitle={<span>{track.artists[0].name}</span>}\n                  //actionIcon={\n                    //<IconButton>\n                   // </IconButton>\n                   //<Icon src={spotify}/>\n                  //}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n        {/*}\n        <div class=\"left-half\">\n        <h1> Artists </h1>\n        {this.state.artistDetails.artists.items.map(artist => (\n          <div>\n              { artist.images[0] &&\n              <div>\n              <img src={artist.images[0].url} style={{ height: 150, width: 150 }}/> <br />\n              </div>\n              }\n              <a href={artist.uri}> {artist.name} </a>\n              <br />\n              <br />\n          </div>\n        ))}\n        </div>\n        <div class=\"right-half\">\n        <h1> Tracks </h1>\n        {this.state.trackDetails.tracks.items.map(track => (\n          <div>\n              { track.album.images[0] &&\n              <div>\n              <img src={track.album.images[0].url} style={{ height: 150, width: 150 }}/> <br />\n              </div>\n              }\n              <a href={track.uri}> {track.name} </a>\n              <p> {track.artists[0].name} </p>\n          </div>\n        ))}\n        </div>\n            */}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}